@using Weblog.DataLayer.Entities
@{
    ViewData["Title"] = "Admin Panel";
    List<User> users = ViewBag.Users;
    List<Category>? categories = ViewBag.Categories;
}

@section Heads {
    <style>
        .selectable-card input[type="checkbox"]:checked ~ * {
            background-color: #e7f1ff;
            border-color: #0d6efd;
        }
    </style>
}

<section class="mt-5 pt-5" style="background-color: #d4e0f2">
    <div class="text-center">
        <button class="btn btn-primary" onclick="loadNews()" data-bs-toggle="modal" data-bs-target="#newsModal">Load
        </button>
        <p>loads top headline news from external sources</p>
    </div>
</section>

<!-- Modal -->
<div class="modal fade" id="newsModal" tabindex="-1" aria-labelledby="newsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newsModalLabel">Select News to Add</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <div class="row g-4" id="news-container">

                    <div class="align-items-center justify-content-center d-flex mt-5">
                        <div class="spinner-border" style="width: 5rem; height: 5rem;" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>


                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="submitSelectedNews()">Add to Database</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

<section class="mt-5">
    <div class="card p-4 mx-5 my-5">
        <div class="card-header">
            <div class="mt-5 float-end">
                <span class="text-muted">Number of posts:</span>
                @ViewBag.PostsCount
            </div>
        </div>
        <div class="card-body" style="direction: rtl;">
            <h5 class="card-title">Create Posts</h5>
            <p class="card-text">you can have 0 to many pictures but title and description are mandatory</p>
            <form asp-action="CreateBlog" method="post" enctype="multipart/form-data">
                <div class="col-md-8 mb-3">
                    <label for="Title" class="form-label">Title</label>
                    <input type="text" class="form-control" id="Title" name="Title" placeholder="">
                </div>
                <div class="col-md-10 mb-3">
                    <label for="Description" class="form-label">Description</label>
                    <textarea class="form-control" id="Description" name="Description" rows="3"></textarea>
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Category</label>
                    @if (categories.Any())
                    {
                        <select class="form-select" name="SubCategoryId">
                            @foreach (var cat in categories.Where(c => c.ParentId == null))
                            {
                                <option value="" disabled="">@cat.Title</option>

                                @if (categories.Any(c => c.ParentId == cat.CategoryId))
                                {
                                    foreach (var sub in categories.Where(c => c.ParentId == cat.CategoryId))
                                    {
                                        <option value="@sub.CategoryId">@sub.Title</option>
                                    }
                                }
                            }
                        </select>
                    }
                </div>
                <div class="col-md-6 mb-3">
                    <label for="Images" class="form-label">Picsا</label>
                    <input class="form-control" type="file" id="Images" name="Images" multiple>
                </div>
                <hr class="hr mt-3"/>
                <div class="mt-1">
                    <button type="submit" class="btn btn-primary btn-large">ثبت</button>
                </div>
            </form>
        </div>
    </div>
</section>

<section class="mt-4">
    <div class="card p-4 mx-5 my-5">
        <div class="card-header">
            <h5 class="card-title">Users</h5>
        </div>
        <div class="card-body" style="direction: rtl;">
            <table class="table table-striped table-hover">
                <tr>
                    <th>Username</th>
                    <th>Email</th>
                    <th>Register Date</th>
                    <th>Sex</th>
                    <th>Age</th>
                    <th>Action</th>
                </tr>
                @foreach (var user in users)
                {
                    <tr>
                        <td>@user.Username</td>
                        <td>@user.Email</td>
                        <td>@DateTime.Now.Date</td>
                        <td>
                            @if (user.IsMale.HasValue && user.IsMale.Value == true)
                            {
                                <i class='bx bx-male text-primary fs-2'></i>
                            }
                            else
                            {
                                <i class='bx bx-female fs-2' style='color:#fea9a9'></i>
                            }
                        </td>
                        <td>
                            @if (user.Age.HasValue)
                            {
                                <p>@user.Age.Value</p>
                            }
                            else
                            {
                                <p>---</p>
                            }
                        </td>
                        <td>
                            <a class="btn btn-danger" asp-action="DeleteUser" asp-route-id="@user.UserId">
                                Delete
                            </a>
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</section>

@section Scripts
{
    <script>
        var toastElement = document.getElementById('liveToast');
        var toast = new bootstrap.Toast(toastElement);
        var toastBody = document.getElementById('toast-body');

        let fetchedNews = []

        function loadNews() {
            const url = 'https://newsapi.org/v2/top-headlines?' +
                'country=us&' +
                'sortBy=popularity&' +
                'apiKey=1cad6d637695423496876af7decbc8f6';

            fetch(url)
                .then(res => res.json())
                .then(data => {
                    const newsContainer = document.getElementById('news-container');
                    newsContainer.innerHTML = ''; // Clear existing content

                    data.articles.forEach((article, index) => {
                        // Skip articles without required data
                        if (!article.title || !article.urlToImage || !article.description) return;

                        fetchedNews.push(article)

                        const card = document.createElement('div');
                        card.className = 'col-md-4';

                        card.innerHTML = `
                    <label class="card h-100 border border-secondary rounded-3 selectable-card position-relative">
                        <input type="checkbox" class="form-check-input position-absolute top-0 end-0 m-2" value="${index}">
                        <img src="${article.urlToImage}" class="card-img-top" alt="News Image">
                        <div class="card-body">
                            <h5 class="card-title">${article.title}</h5>
                            <p class="card-text">${article.description}</p>
                        </div>
                    </label>
                `;

                        newsContainer.appendChild(card);
                    });
                })
                .catch(err => {
                    console.error('Error loading news:', err);
                });
        }

        async function submitSelectedNews() {
            const selectedIndexes = Array.from(document.querySelectorAll('#news-container input[type="checkbox"]:checked'))
                .map(cb => parseInt(cb.value));

            const selectedNews = selectedIndexes.map(i => {
                const article = fetchedNews[i];
                return {
                    title: article.title,
                    description: article.description,
                    imageUrl: article.urlToImage
                };
            });

            const formData = new FormData();

            // Convert each news item to a structure that matches CreateBlogDto
            for (let i = 0; i < selectedNews.length; i++) {
                const item = selectedNews[i];

                formData.append(`blogs[${i}].Title`, item.title);
                formData.append(`blogs[${i}].Description`, item.description);
                formData.append(`blogs[${i}].ImageUrl`, item.imageUrl);

                /*if (item.imageUrl) {
                    try {
                        const blob = await fetchImageAsBlob(item.imageUrl);
                        const filename = `image_${i}.jpg`; // or extract from URL
                        formData.append(`blogs[${i}].Image`, blob, filename);
                    } catch (err) {
                        console.warn(`Could not fetch image for blog ${i}:`, err);
                    }
                }*/
            }

            // Send to backend
            fetch('/Admin/AddOutboundBlogs', {
                method: 'POST',
                body: formData
            })
                .then(res => {
                    if (!res.ok) throw new Error('Upload failed');
                    return res.json();
                })
                .then(data => {
                    toastBody.innerHTML = 'News successfully created'
                    toast.show()
                })
                .catch(err => {
                    console.error(err);
                    alert('Failed to save news');
                });
        }

        async function fetchImageAsBlob(imageUrl) {
            const response = await fetch(imageUrl, {mode: 'cors'});
            if (!response.ok) throw new Error('Image fetch failed');
            return await response.blob();
        }


    
    </script>
}